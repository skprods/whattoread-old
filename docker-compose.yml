version: "3.7"

services:
    whattoread-nginx:
        image: nginx:1.17
        environment:
            TZ: "Europe/Moscow"
        volumes:
            - ./:/var/www
        depends_on:
            - whattoread-php-fpm

    whattoread-php-fpm:
        build:
            context: .
            dockerfile: ./deploy/php-fpm/Dockerfile
        volumes:
            - ./deploy/php-fpm/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
            - ./app:/var/www/app
            - ./bootstrap:/var/www/bootstrap
            - ./config:/var/www/config
            - ./database:/var/www/database
            - ./deploy:/var/www/deploy
            - ./public:/var/www/public
            - ./resources:/var/www/resources
            - ./routes:/var/www/routes
            - ./storage:/var/www/storage
            - ./tests:/var/www/tests
            - ./.env:/var/www/.env
            - ./artisan:/var/www/artisan
            - ./composer.json:/var/www/composer.json
            - ./composer.lock:/var/www/composer.lock
            - ./phpunit.xml:/var/www/phpunit.xml
        depends_on:
            - whattoread-percona
            - whattoread-elasticsearch
            - whattoread-redis
        environment:
            PHP_INI_SCAN_DIR: "/var/www/deploy/php-fpm:/usr/local/etc/php/conf.d"
            TZ: "Europe/Moscow"

    whattoread-percona:
        image: percona:8.0
        restart: always
        environment:
            TZ: "Europe/Moscow"
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        volumes:
            - ./deploy/percona/init-testing-db.sql:/docker-entrypoint-initdb.d/init-testing-db.sql
            - ./deploy/percona/dump.sh:/dump.sh
            - ./deploy/percona/restore.sh:/restore.sh

    whattoread-elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
        restart: unless-stopped
        environment:
            - "discovery.type=single-node"
            - "bootstrap.memory_lock=true" #в этой ситуации узел выберет себя ведущим и не присоединится к кластеру с любым другим узлом.
        ulimits:
            memlock:
                soft: -1
                hard: -1
        tty: true

    whattoread-redis:
        image: redis:6
        restart: always
        environment:
            TZ: "Europe/Moscow"
